{"mappings":"YAEA,IAEMA,EAAYC,SAASC,cAAc,eACnCC,EAAcF,SAASC,cAAc,iBAI3CF,EAAUI,iBAAiB,SAAS,SAAAC,GAClCA,EAAMC,iBACKD,EAAME,cAAcC,MAcxBC,MAAO,sCAAqCC,MAAK,SAAAC,GACtD,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,UAhBfL,MAAK,SAAAM,G,OAoBV,SAA6BA,GAC3BC,QAAQC,IAAIF,GACZC,QAAQC,IAAI,KACZ,IAAMC,EAASH,EACZI,KAAI,SAAAC,GACH,MAAO,wCACkCC,OAAdD,EAASE,KAAK,4CAK1CC,KAAK,IAERrB,EAAYsB,UAAYN,EAjCHO,CAAoBV,MAGtCW,OAAM,SAAAC,G,OAASX,QAAQC,IAAI,qB","sources":["src/index.js"],"sourcesContent":["import './css/styles.css';\n\nconst DEBOUNCE_DELAY = 1000;\n\nconst searchBox = document.querySelector('#search-box');\nconst countryList = document.querySelector('.country-list');\n\nlet userText;\n\nsearchBox.addEventListener('input', event => {\n  event.preventDefault();\n  userText = event.currentTarget.value;\n  fetchCountries(userText)\n    .then(countries => renderCountriesList(countries))\n    //.then(countries => console.log(countries));\n\n    .catch(error => console.log('error rfrkq'));\n  //event.target.reset();\n});\n\n// console.log(userText);\n// const countrytest = 'peru';\n//?fields=name,capital,currencies\n\nfunction fetchCountries(name) {\n  return fetch(`https://restcountries.com/v3.1/all`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nfunction renderCountriesList(countries) {\n  console.log(countries);\n  console.log(777);\n  const markup = countries\n    .map(countrie => {\n      return `<li>\n                <p><b>Name</b>:${countrie.area}</p>\n              </li>\n          `;\n    })\n\n    .join('');\n  // countryList.insertAdjacentHTML = markup;\n  countryList.innerHTML = markup;\n  // console.log(markup);\n}\n// console.log(countrie);\n// const listCountries = fetch(`https://restcountries.com/v3.1/name/peru`)\n//   .then(response => {\n//     //console.log(response.json());\n//     return response.json();\n//   })\n//   .then(country => {\n//     console.log(country);\n//       return country;\n\n//-----\n// console.log(capital);\n// const markupTest = country\n//   .map(country => {\n//     return `<li>\n\n//       <p><b>Email</b>: ${country.population}</p>\n//       <p><b>Company</b>: ${country.capital}</p>\n//     </li>`;\n//   })\n//   .join('');\n// countryList.insertAdjacentHTML('afterbegin', markupTest);\n\n///------\n//   })\n//   .then(country => {\n//     console.log(this.region);\n//   })\n//   .catch(error => {\n//     console.log(error);\n//   });\n// //console.log(listCountries);\n\n//   const markup = countries\n//     .map(country => {\n//       return `<li>\n//           <p><b>Name</b>: ${user.name}</p>\n//           <p><b>Email</b>: ${user.email}</p>\n//           <p><b>Company</b>: ${user.company.name}</p>\n//         </li>`;\n//     })\n//     .join('');\n//   countryList.innerHTML = markup;\n\n// const fetchUsersBtn = document.querySelector('.btn');\n// const userList = document.querySelector('.user-list');\n\n// fetchUsersBtn.addEventListener('click', () => {\n\n// });\n\n// function fetchUsers() {\n//   return fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n//     if (!response.ok) {\n//       throw new Error(response.status);\n//     }\n//     return response.json();\n//   });\n// }\n\n//function renderCountriesList(countries) {\n\n//}\n\n//   const markup = countries\n//     .map(country => {\n//       return `<li>\n//           <p><b>Name</b>: ${user.name}</p>\n//           <p><b>Email</b>: ${user.email}</p>\n//           <p><b>Company</b>: ${user.company.name}</p>\n//         </li>`;\n//     })\n//     .join('');\n//   countryList.innerHTML = markup;\n// }\n\n// listCountries\n//   .then(data => data.json())\n//   .then(countries => {\n//     console.log(countries);\n//   })\n//   .catch(error => {\n//     console.log('error its mistake', error);\n//   });\n"],"names":["$b8f9b7833fa37166$var$searchBox","document","querySelector","$b8f9b7833fa37166$var$countryList","addEventListener","event","preventDefault","currentTarget","value","fetch","then","response","ok","Error","status","json","countries","console","log","markup","map","countrie","concat","area","join","innerHTML","$b8f9b7833fa37166$var$renderCountriesList","catch","error"],"version":3,"file":"index.eb898379.js.map"}